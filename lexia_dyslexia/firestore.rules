rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // User profiles can only be read by the user themselves or teachers for child accounts
    match /users/{userId} {
      allow read: if request.auth != null && (
        request.auth.uid == userId || 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher' && 
         resource.data.role == 'child')
      );
      allow create, update: if request.auth != null && request.auth.uid == userId;
      
      // Only parents can register child accounts
      allow create: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'parent' && 
        request.resource.data.role == 'child';
    }
    
    // Game progress data
    match /gameProgress/{progressId} {
      allow read: if request.auth != null && (
        // The user themselves
        resource.data.userId == request.auth.uid || 
        // Parent of the child
        (get(/databases/$(database)/documents/users/$(resource.data.userId)).data.parentId == request.auth.uid) ||
        // Teacher with linked student
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher' && 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.studentIds.hasAny([resource.data.userId]))
      );
      allow create, update: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Forum posts
    match /posts/{postId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && resource.data.authorId == request.auth.uid;
    }
    
    // Forum comments
    match /comments/{commentId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && resource.data.authorId == request.auth.uid;
    }
    
    // Post likes
    match /likes/{likeId} {
      allow read: if request.auth != null;
      allow create, delete: if request.auth != null;
    }
  }
}
